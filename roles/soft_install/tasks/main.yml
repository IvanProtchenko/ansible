---
- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl

#- name: Add an apt signing key for Docker
#  apt_key:
#    url: https://download.docker.com/linux/ubuntu/gpg
#    state: present
- name: Add Apt signing key on remote server to keyring
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/trusted.gpg.d/docker.gpt
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [ arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpt ] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Install docker and its dependecies
  apt: 
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - gnupg-agent
    - software-properties-common
    - docker-ce 
    - docker-ce-cli 
    - containerd.io

#- name: Add an apt signing key for Kubernetes
#  apt_key:
#    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#    keyring: /etc/apt/trusted.gpg.d/k8s.gpt
#    state: present
- name: Add Apt signing key on remote server to keyring
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    keyring: /etc/apt/trusted.gpg.d/k8s.gpt
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: "deb [ signed-by=/etc/apt/trusted.gpg.d/k8s.gpt ] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes

- name: Install Kubernetes binaries
  apt: 
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - kubelet 
    - kubeadm 
    - kubectl

- name: Configure node ip
  ansible.builtin.template:
    src: kubelet.j2
    dest: /etc/default/kubelet
    owner: root
    group: root
    mode: '0666'

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted